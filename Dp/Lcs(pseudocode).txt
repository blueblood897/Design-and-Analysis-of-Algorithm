Function LCS(A[1..m], B[1..n]):

    Create a 2D array dp[0..m][0..n]

    // Step 1: Initialize first row and column with 0
    for i = 0 to m:
        dp[i][0] = 0
    for j = 0 to n:
        dp[0][j] = 0

    // Step 2: Fill the dp table
    for i = 1 to m:
        for j = 1 to n:
            if A[i-1] == B[j-1]:
                dp[i][j] = 1 + dp[i-1][j-1]
            else:
                dp[i][j] = max(dp[i-1][j], dp[i][j-1])

    // Step 3: Reconstruct the LCS string
    i = m
    j = n
    LCS = empty string

    while i > 0 and j > 0:
        if A[i-1] == B[j-1]:
            Add A[i-1] to front of LCS
            i = i - 1
            j = j - 1
        else if dp[i-1][j] > dp[i][j-1]:
            i = i - 1
        else:
            j = j - 1

    return LCS
